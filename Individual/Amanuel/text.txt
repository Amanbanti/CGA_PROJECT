Lesson 1: Problem-Solving in Design
  The process includes four stages:

      1.Define: Identify user needs through interviews and profiles.
      2.Prepare: Connect needs to problems, research solutions, brainstorm, and evaluate feasibility.
      3.Try: Sketch ideas and create prototypes for user feedback.
      4.Reflect: Share findings with stakeholders and review user feedback.
      5.This iterative approach promotes user-centered design.

Word Search Game & Animation:
   Key features include customizable sections for shapes and colors, zoom functionality for detailed work, and 
   image integration to enhance creativity.

   Assigned Templates:

      -Maria: Colorful design for engaging children in reading.
      -Richard: Environmental themes with recycling interactivity.
      -Layla: Personalized messages with appealing graphics for kids.
      -Emma: Dynamic animations for illustrating shark game concepts.
      -Levi: Interactive storytelling for comic books.
      -Client Design for Tatiana:
      -Tatiana needs interactive digital greeting cards to engage users with humor and creativity.

Preparation: Use bright colors, cartoon characters, puns, and interactive buttons.
Prototyping: Sketch layouts with clear text and marked interactive areas.
Reflection: Strengths include humor and interactivity, while instructions need to be clearer.

Lesson 2: Plotting Shapes
Learned to draw shapes and replicated a car design.

Lesson 3: Drawing in Game Lab
   -Learned to color and position shapes accurately.
   -Commands like rect(x, y, width, height) define position and size.
   -fill("color") fills shapes, stroke("color") sets borders, and strokeWeight(size) adjusts border thickness.
   -Commands like noFill() and noStroke() are used to remove fills and borders.
   -Example: ellipse(x, y, width, height) creates circular shapes.

......................................................................................................
   #Try to place the rectangle near the bottom right of the screen.

         rect(350, 350);
......................................................................................................
   #Place two rectangles exactly in the corners of the screen

         rect(0,0);
         rect(350, 350); 
......................................................................................................

   #Change the color from blue to yellow.and Add a new square to the image

           fill("yellow");
           rect(100,100);
           rect(250, 100);
           rect(100, 200);
......................................................................................................

    #Change the red rectangle's color to green.
    #Change the order of the code so the green rectangle appears on top.

           fill("blue");
           rect(200, 200);
           fill("green");
           rect(175,175);
......................................................................................................
    #Add a new ellipse of a different color.

         fill("teal");
         ellipse(100, 100);
         // Add a new ellipse of a different color.
         fill("orange");
         ellipse(200, 200);

......................................................................................................

   #Rearrange the code so the wheels are visible.

         fill("red");
         rect(100,250);
         rect(150,250);
         rect(200,250);
         rect(250,250);
         rect(150,200);
         rect(200,200);
         fill("dimgray");
         ellipse(150,300);
         ellipse(250,300);

......................................................................................................

   #Change the code so that all the petals are attached to the center of the flower.

           fill("purple");
           ellipse(200,165);
           ellipse(160, 195);
           ellipse(180, 235);
           ellipse(226, 230);
           ellipse(240, 186);
           fill("yellow");
           ellipse(200,200);

......................................................................................................
   #Rearrange the code so the colors are correct.

            fill("black");
            rect(175,100);
            rect(175,150);
            rect(175,200);
            fill("red");
            ellipse(200,125);
            fill("yellow");
            ellipse(200,175);
            fill("green");
            ellipse(200,225);

......................................................................................................
   #Drawing a car with correct color position and shape

            fill("blue")
            rect(150,150)
            rect(200,150)
            fill("green")
            rect(100,200)
            rect(150,200)
            rect(200,200)
            rect(250,200)
            fill("red")
            ellipse(150,250)
            ellipse(250,250)
......................................................................................................

   #Drawing this triangle made out of circles

            fill("purple")
            ellipse(180, 180);
            ellipse(200, 210);
            ellipse(225, 235);
            ellipse(255, 275);
            ellipse(235, 275);
            ellipse(205, 275);
            ellipse(175, 275);
            ellipse(150, 275);
            ellipse(150, 250);
            ellipse(150, 220);
            ellipse(150, 190);
            ellipse(150, 160);
......................................................................................................

   #Change the code so it makes the picture in the instructions

          fill("orange");
          ellipse(150,150);
          ellipse(200,150);
          ellipse(150,200);
          ellipse(200,200);
          fill("purple");
          rect(147, 147);
......................................................................................................
   #Use the point() block to finish the code so it matches the picture.

           strokeWeight(35);
           point(200, 170);
           strokeWeight(5);
           fill("red");
           ellipse(200, 200);
           point(200, 190);
           point(210, 200);
           point(188, 200);
           point(200, 210);
......................................................................................................
   #Use the strokeWeight() block to finish the code so it matches the picture.
            fill("ivory");
            rect(160, 180);
            strokeWeight(5)
            point(170, 190);
            point(185, 205);
            point(200, 220);
......................................................................................................
   #Use the noFill() block to finish the code so it matches the picture.
            noFill()
            ellipse(200, 200);
            ellipse(200, 225);
            ellipse(178, 212);
            ellipse(222, 212);
            ellipse(178, 237);
            ellipse(222, 237);
            ellipse(200, 250);
            ellipse(200, 150);
            ellipse(200, 175);
            ellipse(178, 162);
            ellipse(222, 162);
            ellipse(178, 187);
            ellipse(222, 187);
            ellipse(200, 200);

......................................................................................................
   #Draw a face that uses at least 4 shapes and at least 2 different colors
            // Eyes
            fill("lightblue");
            ellipse(150,170); 
            ellipse(240,170);

            // Nose
            fill("red");
            ellipse(200,250);

            // Mouth
            fill("lightgreen");
            rect(200,350);
            rect(150,350);
            rect(100,320);
            rect(250,320); 

......................................................................................................
   #Use what you've learned to try to create your favorite food!

            //iceCream
            fill("saddlebrown");
            triangle(100, 200, 70, 300, 130, 300);
            fill("white");
            ellipse(100, 200, 80, 80);
            fill("pink");
            ellipse(100, 150, 70, 70); 
            fill("red");
            ellipse(100, 110, 20, 20); 

......................................................................................................
   #Use what you've learned to try to create a simple drawing that represents your favorite holiday!

            //Christmas Tree
            // Background
            background("skyblue");

            // Ground (Snow)
            fill("white");
            rect(0, 300, 400, 100); // Ground layer

            // Tree Base
            fill("brown");
            rect(170, 260, 20, 50); 

            // Tree Layers
            fill("green");
            triangle(180, 150, 130, 260, 230, 260);
            triangle(180, 180, 120, 260, 240, 260);
            triangle(180, 210, 110, 260, 250, 260);

            // Ornaments
            fill("red");
            ellipse(160, 200, 10, 10);
            ellipse(200, 200, 10, 10);
            ellipse(180, 230, 10, 10);

            // Star
            fill("yellow");
            ellipse(180, 140, 20, 20); // Star on top
......................................................................................................





## Lesson 4

    #Change the numbers in the second rect() to make red rectangle longer than the blue one.
         fill("blue");
         rect(120,100,80,150);
         fill("red");
         rect(250,100,80,200);
......................................................................................................

    #Add an orange ellipse to the screen that is taller than the green one
    #Rearrange the blocks so the orange ellipse is behind the green one
    
         fill("orange");
         ellipse(200, 200, 250, 350);
         fill("green");
         ellipse(200,200,200,150);
......................................................................................................
    #Change the background from yellow to orange.
         fill("purple");
         rect(50,50, 100,100);
         background("orange");
         fill("blue");
         rect(250,250, 100, 100);
......................................................................................................
    # Make a black background behind the green circle.
         fill("green");
         background("black");
         ellipse(200,200,200,200);
......................................................................................................
             
   # Draw sky

         background("skyblue");

         // Draw sun
         fill("yellow");
         ellipse(350,50,50,50);

         // Draw grass
         fill("green");
         rect(0,350,400,50);

......................................................................................................

   #Debug the code so the picture shows on the right.

         fill("red");
         ellipse(200, 200, 400, 400);
         fill("orange");
         ellipse(200, 200, 340, 340);
         fill("yellow");
         ellipse(200, 200, 280, 280);
         fill("green");
         ellipse(200, 200, 220, 220);
         fill("blue");
         ellipse(200, 200, 160, 160);
         fill("indigo");
         ellipse(200, 200, 100, 100);
         fill("violet");
         ellipse(200, 200, 40, 40);

......................................................................................................

  #Debug: Missing Shapes.

        fill("black");
        rect(50,50, 300, 300);
        fill("white");
        rect(60, 60, 250, 250);
        fill("black");
        rect(76, 72, 200, 200);
        fill("white");
        rect(92, 86, 150, 150);
        fill("black");
        rect(104, 102, 100, 100);
        fill("white");
        rect(118, 114, 50, 50);

......................................................................................................

   #Debug this program to make the cloud wider than it is tall, like in the image.
      
         // Draw sky
         background("skyblue");

         // Draw sun
         fill("yellow");
         ellipse(300,50,50,50);

         // Draw grass
         fill("green");
         rect(0,300,400,100);

         // Draw cloud
         fill("white");
         ellipse(150,100,200,100);
......................................................................................................

  #Regular polygons 

        regularPolygon(50, 85, 3, 50);
        regularPolygon(150, 75, 4, 50);
        regularPolygon(240, 70, 5, 50);
        regularPolygon(340, 67, 6, 50);
        regularPolygon(50, 175, 7, 50);
        regularPolygon(150, 175, 8, 50);
        regularPolygon(250, 175, 9, 50);
        regularPolygon(350, 175, 10, 50);
        regularPolygon(50, 275, 11, 50);
        regularPolygon(152, 275, 12, 50);
        regularPolygon(252, 275, 13, 50);
        regularPolygon(350, 275, 14, 50);

......................................................................................................
   #compelete the shape 

         fill("red");
         shape(200, 200, 0, 400, 400, 400);
         fill("blue");
         shape(200, 200, 0, 0, 400, 0);
         fill("yellow");
         shape(200, 200, 400, 400, 400, 0);
         fill("green");
         shape(200, 200, 0, 400, 0, 0);
......................................................................................................
   #Create two more shapes on the screen using the arc block!

         fill("brown");
         arc(50, 100, 100, 100, 0, 360);
         fill("red");
         arc(200, 100, 100, 100, 0, 300);
         fill("green");
         arc(350, 100, 100, 100, 90, 180);
         fill("purple");
         arc(50, 200, 100, 100, 0, 180);
         fill("yellow");
         arc(200, 200, 100, 100, 30, 210);
         fill("black");
         arc(200, 300, 100, 100, -90, 180);
         fill("orange");
         arc(350, 250, 100, 100, -180, 90);
         fill("blue");
         arc(50, 350, 100, 100, -250, 50);
......................................................................................................
   #Finish the code so it matches the picture
         line(0, 0, 50, 400);
         line(0, 50, 100, 400);
         line(0, 100, 150, 400);
         line(0, 150, 200, 400);
         line(0, 200, 250, 400);
         line(0, 250, 300, 400);
         line(0, 300, 350, 400);
         line(0, 350, 400, 400);
         line(350, 0, 400, 400);
         line(300, 0, 400, 350);
         line(250, 0, 400, 300);
         line(200, 0, 400, 250);
         line(150, 0, 400, 200);
         line(100, 0, 400, 150);
         line(50, 0, 400, 100);
         line(0, 0, 400, 50);
         line(0, 400, 0, 0);
         line(0, 0, 400, 0);

......................................................................................................

## Lesson 5 

   #Change the values of the variables to update the position of the ellipse
        var xPosition = 200;
        var whatsTheY = 300;
        ellipse(xPosition, whatsTheY);

......................................................................................................


   #Find the rule each variable label violates?

      Rule Violations and Fixes:
         var size of circle = 150;
         Rule Violated: No Spaces (Variable names cannot have spaces).
         Correction: Rename to sizeOfCircle.

         var 1dimension = 100;
         Rule Violated: Must Start with a Letter (Variable names cannot start with a number).
         Correction: Rename to dimension1.

         var yLocation );= 200;
         Rule Violated: No Special Characters (Variable names should not include invalid symbols like ) in this case).
         Correction: Remove the invalid character and rename to yLocation.

         ellipse(1dimension, YLocation, size of circle, size of circle);
         Rule Violated: Case Sensitivity (JavaScript variable names are case-sensitive, and YLocation is different from yLocation).
         Correction: Use the corrected case, yLocation.



   #Correct the errors by picking new names that follow the rules above.
         var sizeOfCircle = 150; // Fixed "size of circle"
         var dimension1 = 100;   // Fixed "1dimension"
         var yLocation = 200;    // Fixed "yLocation with special character"

         fill("OrangeRed");
         ellipse(dimension1, yLocation, sizeOfCircle, sizeOfCircle); // Used corrected variable names

......................................................................................................

   #Update the code so the red petals touch each other

        var petalSize = 75;
        noStroke();
        background("ForestGreen");
        fill("red");
        ellipse(150,200,petalSize,petalSize);
        ellipse(200,150,petalSize,petalSize);
        ellipse(250,200,petalSize,petalSize);
        ellipse(200,250,petalSize,petalSize);
        fill("black");
        ellipse(200,200,50,50);

......................................................................................................

    #Change the value assigned to circleSize so that the circle fills the entire screen.

         var circleSize = 1200;
         fill("Crimson");
         ellipse(400, 400, circleSize, circleSize);

......................................................................................................


   #Update the code to match the image
      var x = 45;
      var y = 200;
      fill("deeppink");
      ellipse(x,110);
      ellipse(360,y);
      rect(x, y);

......................................................................................................

   #Debug: Unused Variables
   #Update the code to use the variables

      var earSize = 80;
      var eyeSize = 15;
      var center = 200;
      fill("saddlebrown");
      ellipse(130, 115, earSize, earSize);
      ellipse(270, 115, earSize, earSize);
      ellipse(center, 195, 205, 205);
      ellipse(center, 245, 100, 100);
      fill("black");
      ellipse(center, 225, 20, 20);
      ellipse(165, 175, eyeSize,eyeSize);
      ellipse(235, 175, eyeSize, eyeSize);
      line(center, 235, center, 265);
      noFill();
      arc(200, 215, 100, 100, 35, 145);

......................................................................................................
   #Debug: Adding Variables
   #Update the variable names at the top of the code
      var size = 100;
      var c1 = "green";
      var c2 = "red";
      var c3= "orange";
      fill(c2);
      ellipse(200, 100, size, size);
      noFill();
      rect(150, 50, size, size);
      fill(c3);
      ellipse(200, 200, size, size);
      noFill();
      rect(150, 150, size, size);
      fill(c1);
      ellipse(200, 300, size, size);
      noFill();
      rect(150, 250, size, size);

......................................................................................................

   #Change the program to use the eyeSize variable.
      var eyeSize = 40;

      noStroke();
      background("green");

      // Face
      fill("yellow");
      ellipse(200,200,200,200);

      // Eyes
      fill("black");
      ellipse(160,170,eyeSize,eyeSize);
      ellipse(240,170,eyeSize,eyeSize);

      // Mouth
      fill("white");
      rect(160,240,80,20);

......................................................................................................

   #Challenge: Draw a Changing Image
   #Common variables for size and placement
      var faceSize = 200; 
      var eyeSize = 20;
      var y = 150;      
      var xOffset = 50;   
      var mouthWidth = 100;
      var mouthHeight = 20;

      // Draw the face
      fill("peachpuff");
      ellipse(200, 200, faceSize, faceSize); // Face

      // Draw the eyes
      fill("white");
      ellipse(200 - xOffset, y, eyeSize, eyeSize); // Left eye
      ellipse(200 + xOffset, y, eyeSize, eyeSize); // Right eye

      fill("black");
      ellipse(200 - xOffset, y, eyeSize / 2, eyeSize / 2); // Left pupil
      ellipse(200 + xOffset, y, eyeSize / 2, eyeSize / 2); // Right pupil

      // Draw the mouth
      fill("red");
      ellipse(200, y + 50, mouthWidth, mouthHeight); // Mouth


......................................................................................................

   ## Lesson 6

      I have learned how to use the randomNumber function in various aspects of my code, including setting the background color,
      controlling the fill color, and determining the X and Y positions, as well as the width and height of shapes like ellipses and rectangles.
      By introducing randomness, I can create dynamic, unpredictable changes in my drawings, making them more engaging and interactive.

      #Change the numbers inside randomNumber() so the ellipse can appear anywhere horizontally on the screen
         background("tomato");
         fill("orange");
         ellipse(randomNumber(0,400), 200, 50, 50);
......................................................................................................

      #Make the ellipse appear at random y coordinates
         background("tomato");
         fill("orange");
         ellipse(randomNumber(0,400),randomNumber(0,400), 50, 50);
......................................................................................................

      #Assign a random size for the eyes
         var eyeSize = randomNumber(10, 50); // Eyes will have a random size between 10 and 50

         noStroke();
         background("green");

         // Face
         fill("yellow");
         ellipse(200, 200, 200, 200);

         // Eyes
         fill("black");
         ellipse(160, 170, eyeSize, eyeSize); // Left eye
         ellipse(240, 170, eyeSize, eyeSize); // Right eye

         // Mouth
         fill("white");
         rect(160, 240, 80, 20);
......................................................................................................

         var petalSize;
         background("green");

         #Update the first flower's petals to be a random size
         petalSize = randomNumber(20, 50); // Random size between 20 and 50 for the first flower's petals
         // petals
         fill("purple");
         ellipse(75, 100, petalSize, petalSize);
         ellipse(125, 100, petalSize, petalSize);
         ellipse(100, 75, petalSize, petalSize);
         ellipse(100, 125, petalSize, petalSize);
         // center
         fill("yellow");
         ellipse(100, 100, 50, 50);

         #Update the second flower's petals to be a random size
         petalSize = randomNumber(40, 80); // Random size between 40 and 80 for the second flower's petals
         // petals
         fill("purple");
         ellipse(275, 300, petalSize, petalSize);
         ellipse(325, 300, petalSize, petalSize);
         ellipse(300, 275, petalSize, petalSize);
         ellipse(300, 325, petalSize, petalSize);
         // center
         fill("yellow");
         ellipse(300, 300, 50, 50);

......................................................................................................

   background("black");

   #Update each planet to be a random size each time the program is run
      fill("yellow");
      ellipse(0, 200, randomNumber(20, 70), randomNumber(20, 70)); 
      fill("salmon");
      ellipse(80, 200, randomNumber(20, 70), randomNumber(20, 70));
      fill("cyan");
      ellipse(160, 200, randomNumber(20, 70), randomNumber(20, 70));
      fill("lavender");
      ellipse(240, 200, randomNumber(20, 70), randomNumber(20, 70)); 
      fill("crimson");
      ellipse(320, 200, randomNumber(20, 70), randomNumber(20, 70));
      fill("orchid");
      ellipse(400, 200, randomNumber(20, 70), randomNumber(20, 70)); 
......................................................................................................
   #Debug: Random Shape Position
   #Update the code so the rectangles appear stacked at random x positions
      var xPosition = randomNumber(0,150);
      fill("pink");
      rect(xPosition , 100, 250, 50);
      fill("purple");
      rect(xPosition, 150, 250, 50) ;
      fill("firebrick");
      rect(xPosition, 200, 250, 50);
......................................................................................................
   #Modify the Scene
   #changing the sun x position and y position by randomNumber and also the mountains the same is true for this.

      background("lightblue");
      fill("yellow");
      ellipse(randomNumber(80,325), randomNumber(25,65));
      fill("brown");
      regularPolygon(randomNumber(100,150), 300, 3, 200);
      regularPolygon(randomNumber(250,350), 300, 3, 200);
      regularPolygon(randomNumber(150,350), 300, 3, 250);
      regularPolygon(randomNumber(10,50), 300, 3, 250);
      regularPolygon(randomNumber(300,390), 300, 3, 250);
      fill("lightgreen");
      rect(0, 300, 400, 100);
......................................................................................................
   #Rainbow Snake
   #Add at least three new different colored circles to your rainbow snake.
   #Use randomNumber to make the rest of the snake's body move up and down like the first three.

      background("skyBlue");

      // Head and body segments using random Y positions
      fill("red");
      ellipse(100, randomNumber(190, 210), 50, 50);

      fill("orange");
      ellipse(140, randomNumber(190, 210), 50, 50);

      fill("yellow");
      ellipse(180, randomNumber(190, 210), 50, 50);

      // Adding three new segments with different colors
      fill("green");
      ellipse(220, randomNumber(190, 210), 50, 50);

      fill("blue");
      ellipse(260, randomNumber(190, 210), 50, 50);

      fill("purple");
      ellipse(300, randomNumber(190, 210), 50, 50);
......................................................................................................
      #Favorite Song
         // Background to represent a night sky
         background("black");

         // Dynamic lights
         fill(randomNumber(100, 255), randomNumber(100, 255), randomNumber(100, 255));
         ellipse(randomNumber(50, 400), randomNumber(50, 200), 30, 30); // First light
         fill(randomNumber(100, 255), randomNumber(100, 255), randomNumber(100, 255));
         ellipse(randomNumber(50, 400), randomNumber(50, 200), 30, 30); // Second light
         fill(randomNumber(100, 255), randomNumber(100, 255), randomNumber(100, 255));
         ellipse(randomNumber(50, 400), randomNumber(50, 200), 30, 30); // Third light

         // Buildings as part of a cityscape
         fill("gray");
         rect(50, 300, 50, 100); // First building
         rect(150, 250, 50, 150); // Second building
         rect(250, 280, 50, 120); // Third building
         rect(350, 270, 50, 130); // Fourth building

         // Dynamic stars in the night sky
         fill("white");
         ellipse(randomNumber(10, 390), randomNumber(10, 150), 5, 5);
         ellipse(randomNumber(10, 390), randomNumber(10, 150), 5, 5);
         ellipse(randomNumber(10, 390), randomNumber(10, 150), 5, 5);

         // Dynamic light beams
         stroke(randomNumber(100, 255), randomNumber(100, 255), randomNumber(100, 255));
         line(200, 150, 180, 300);
         line(200, 150, 220, 300);
......................................................................................................

## Lesson 7 Mini-project -- Robot-Faces

   #Review Shape Blocks
   #Review Regular Polygons
        regularPolygon(50, 85, 3, 50);
        regularPolygon(150, 75, 4, 50);
        regularPolygon(240, 70, 5, 50);
        regularPolygon(340, 67, 6, 50);
        regularPolygon(50, 175, 7, 50);
        regularPolygon(150, 175, 8, 50);
        regularPolygon(250, 175, 9, 50);
        regularPolygon(350, 175, 10, 50);
        regularPolygon(50, 275, 11, 50);
        regularPolygon(152, 275, 12, 50);
        regularPolygon(252, 275, 13, 50);
        regularPolygon(350, 275, 14, 50);
......................................................................................................

   #Robot Face
   #Use at least 4 different shape blocks, at least 4 variables with random numbers
    to create a robot face with unique and creative features!

         // Variables for robot's features
         var headSize = randomNumber(150, 200);
         var eyeSize = randomNumber(20, 40);
         var mouthWidth = randomNumber(50, 100);
         var antennaHeight = randomNumber(50, 100);

         // Background
         background("lightblue");

         // Head
         fill("silver");
         rect(150, 150, headSize, headSize);

         // Eyes
         fill("black");
         ellipse(180, 200, eyeSize, eyeSize); // Left eye
         ellipse(270, 200, eyeSize, eyeSize); // Right eye

         // Mouth
         fill("red");
         rect(200, 250, mouthWidth, 20);

         // Antenna
         fill("gold");
         rect(225, 100, 10, antennaHeight);
         fill("orange");
         ellipse(230, 100, 20, 20); // Antenna tip

         // Ears
         fill("gray");
         rect(120, 180, 20, 50); // Left ear
         rect(320, 180, 20, 50); // Right ear

......................................................................................................
lesson-8
   Overview
      - How can we use sprites to help us keep track of lots of information in our programs?

   Today you will learn about sprites which will not only give you a way to keep track of various pieces of information in your programs but will also allow you to create more interesting and fun images!

   - Vocabulary
      
      Sprite - A character on the screen with properties that describe its location, movement, and look.

   Introduced Code

      - drawSprites()

      - sprite.setAnimation(label)

      - var sprite = createSprite(x, y, w, h)
......................................................................................................
   #Create a new sprite variable
   var sprite1 = createSprite(200, 200, 50, 50); // Create a sprite at (200, 200) with width and height 50

   // Draw the sprites
   drawSprites();

......................................................................................................
   #Debug


   var rightSprite = createSprite(300, 200);
   var leftSprite = createSprite(100, 200);
   drawSprites();

......................................................................................................
   # Create the fruit sprite
      var fruit = createSprite(200, 150, 50, 50); // Positioned at (200, 150)
      fruit.setAnimation("strawberry"); // Animation set to strawberry

      // Create the vegetable sprite
      var vegetable = createSprite(200, 300, 50, 50); // Positioned below the fruit at (200, 300)
      vegetable.setAnimation("broccoli"); // Animation set to broccoli

      // Draw the sprites
      drawSprites();

......................................................................................................

   //Create a sprite variable
   //Set the animation
   //Draw the sprite on the screen

      var student = createSprite(200, 200);
      student.setAnimation("Hawa");
      drawSprites();
......................................................................................................
   #Use the setAnimation command to change the look of your other sprites.
      var topLeftSprite = createSprite(100, 100);
      var topRightSprite = createSprite(300, 100);
      var bottomLeftSprite = createSprite(100, 300);
      var bottomRightSprite = createSprite(300,300);
      topLeftSprite.setAnimation("bunny")
      topRightSprite.setAnimation("planeRed1")
      bottomLeftSprite.setAnimation("flyBot")
      bottomRightSprite.setAnimation("alien");
      drawSprites();


......................................................................................................
   #Debug some sprites

      var drink = createSprite(100, 200);
      drink.setAnimation("soda");
      var dessert = createSprite(300, 200);
      dessert.setAnimation("ice_cream");
      var message = createSprite(200, 200);
      message.setAnimation("textGetReady");

      drawSprites();
......................................................................................................
   #Debug: Missing Sprites
      var sprite1 = createSprite(50, 50);
      var sprite2 = createSprite(50, 150);
      var sprite3 = createSprite(50, 250);
      var sprite4 = createSprite(50, 350);
      var sprite5 = createSprite(300, 200);
      sprite1.setAnimation("planeRed");
      sprite2.setAnimation("planeBlue");
      sprite3.setAnimation("planeGreen");
      sprite4.setAnimation("planeYellow");
      sprite5.setAnimation("bunny");
      drawSprites()

......................................................................................................
   #Create your own sprites
   animation1= createSprite(200,200)
   animation1.setAnimation("animalhead_cat_1")
   drawSprites()

......................................................................................................

   #Create kite sprite and set animation
      var kite = createSprite(300, 50);
      kite.setAnimation("kite.jpg_1")
      // Draw background
      background("skyblue");

      // Draw grass
      fill("green");
      noStroke();
      rect(0, 300, 400, 100);

      // Draw string
      stroke("black");
      strokeWeight(5);
      line(150, 300, 300, 50);

      // Draw sprite
      drawSprites();

......................................................................................................

lesson-9

   #Run the program to see where the sprites appear.
      var palette = createSprite();
      palette.setAnimation("paint_palette");
      var brush = createSprite();
      brush.setAnimation("paint_brush");
      palette.x = 240;
      palette.y = 300;
      brush.x= 270;
      brush.y = 220;
      drawSprites();

......................................................................................................
   #Run the program to see how what is different about the first two notes.
   #Use the same blocks on the last two notes to make them look different, too.
      background("skyblue");
      var drums = createSprite(200,290);
      drums.setAnimation("drum_set");
      var note1 = createSprite(50,50);
      note1.setAnimation("eighth_note");
      note1.scale = 0.3;
      var note2 = createSprite(150,50);
      note2.setAnimation("eighth_note");
      note2.scale = 0.7;
      var note3 = createSprite(250,50);
      note3.setAnimation("eighth_note");
      var note4 = createSprite(350,50);
      note4.setAnimation("eighth_note");
      drawSprites();

......................................................................................................
   #Fix the code so that it looks like the picture.
      background("darkseagreen");
      fill("deepskyblue");
      ellipse(75, 75, 75, 75);
      var fly = createSprite(25, 25);
      fly.setAnimation("fly");
      fly.scale = 0.5;

      var fish = createSprite(75, 75);
      fish.setAnimation("fish");
      fish.scale = 0.5;

      var cow = createSprite(150, 150);
      cow.setAnimation("cow");
      cow.scale = 0.45;

      var elephant = createSprite(300, 300);
      elephant.setAnimation("elephant");
      elephant.scale = 0.8;

      drawSprites();
......................................................................................................
   #Run the program to see how big the food is.
   #Use sprite properties to scale all of the food sprites down so they fit on the plate.
      background("burlywood");
      fill("white");
      ellipse(200,200, 350);
      var fries = createSprite(250,140);
      fries.scale = 0.6
      fries.setAnimation("fries");
      var burger = createSprite(110,200);
      burger.setAnimation("burger");
      burger.scale = 0.6
      var dessert = createSprite(260,300);
      dessert.setAnimation("watermelon");
      dessert.scale = 0.6
      drawSprites();
......................................................................................................
   #Tint
      var creature = createSprite(200, 200);
      creature.setAnimation("crowned_creature_1");
      creature.scale = 0.3;
      creature.tint = 140
      drawSprites();

......................................................................................................
lesson-9

   #Add another textSize block before the text block that prints the text "large" to the screen.
      background("lightblue");
      textSize(40);
      text("small", 170, 100);

      textSize(60);
      text("medium", 130, 200);

      textSize(80);
      text("large", 120, 300);

......................................................................................................

   #Reorder the blocks so that each part of the scene is drawn in the correct order so that the scene looks like the picture
      var berry = createSprite(200, 180);
      berry.setAnimation("strawberry");
      berry.scale = 0.7;
      berry.rotation = 45;

      background("lightpink");

      stroke("black");
      line(0, 0, 400, 400);
      line(100, 0, 400, 300);
      line(200, 0, 400, 200);
      line(300, 0, 400, 100);
      line(0, 100, 300, 400);
      line(0, 200, 200, 400);
      line(0, 300, 100, 400);

      noStroke();
      fill("white");
      ellipse(185, 140, 40, 40);
      ellipse(233, 168, 40, 40);
      fill("black");
      ellipse(185, 140, 15, 15);
      ellipse(233, 168, 15, 15);

      drawSprites();

      fill("yellow");
      textSize(35);
      text("It's berry nice to see you", 10, 100);

......................................................................................................
   #Add two pieces of text to the following scene.  
   #Make the two pieces of text different sizes.
      var grass = createSprite(200,200);
      grass.setAnimation("floating_grass");
      var alien = createSprite(180,100);
      alien.setAnimation("alien");
      alien.scale = 1.3;
      var robot = createSprite(300,300);
      robot.setAnimation("robot");
      robot.scale = 0.2;
      var ball = createSprite(150,186);
      ball.setAnimation("basketball_1");
      ball.scale = 0.2
      var girl = createSprite(108,314);
      girl.setAnimation("blue_dress_wave_1");
      girl.scale = 0.5
      drawSprites();
......................................................................................................
   #Add a new block to make the word "sky" a different color.
      var sky = createSprite(200,200);
      sky.setAnimation("rainbow");
      drawSprites();
      textSize(50);
      fill("red");
      text("Rainbows", 30, 50);
      fill("orange");
      text("in the" , 70, 100);
      fill("purple");
      text("sky...", 110, 150);
      fill("yellow");
      text("shines!", 160, 200);

......................................................................................................
lesson_11

   #Create Your Scene - Background
      background("yellow");
      var sprite1 = createSprite(150, 200);
      sprite1.setAnimation("cny_01_1");
      sprite1.scale=0.2
      var sprite2 = createSprite(250, 200);
      sprite2.setAnimation("cny_02_1");
      sprite2.scale=0.2
      drawSprites()
......................................................................................................
lesson_12
   #Add code to this program so that your drawing has orange circles being drawn, too.
      noStroke();

      function draw(){
      fill("green");
      ellipse(randomNumber(0,400), randomNumber(0,400));
      fill("orange");
      ellipse(randomNumber(0,350), randomNumber(0,350));
      }

......................................................................................................
   #Updating Properties
      var pencil = createSprite(100, 200);
      pencil.setAnimation("pencil");

      var brush = createSprite(300, 200);
      brush.setAnimation("brush");

      var pencilDirection = 1;
      var brushDirection = -1;

      function draw() {
      background("white");

      pencil.x = pencil.x + (4 * pencilDirection);
      if (pencil.x > 120 || pencil.x < 100) {
         pencilDirection = -pencilDirection; 
      }

      brush.x = brush.x + (4 * brushDirection); 
      if (brush.x > 300 || brush.x < 290) {
         brushDirection = -brushDirection; 
      }

      drawSprites();
      }
......................................................................................................
   #updating rotation

      World.frameRate = 10;
      var greenAlien = createSprite(100, 200);
      greenAlien.setAnimation("greenAlien");
      var pinkAlien = createSprite(300, 200);
      pinkAlien.setAnimation("pinkAlien");
      noStroke();
      fill("white");
      function draw() {
      background("black");
      //ellipse(randomNumber(0,400),randomNumber(0,400),5,5);
      greenAlien.rotation = randomNumber(-5,5);
      //2 Add code to this program to make the other alien shake just like the first.
      pinkAlien.rotation=randomNumber(-5,5);
      drawSprites();
      }

......................................................................................................

   #Updating Properties
            
      var salt = createSprite(200,200);
      salt.setAnimation("salt");

      function draw() {
      background("skyblue");
      salt.y=randomNumber(200,190);
      drawSprites();
      }

......................................................................................................
   #Create An Animated Scene
      World.frameRate = 5;
      var sprite = createSprite(200, 200);
      sprite.setAnimation("background");
      var sprite1 = createSprite(300, 215);
      sprite1.setAnimation("cow");
      sprite1.scale = 0.4;
      var sprite2 = createSprite(110, 200);
      sprite2.setAnimation("elephant");
      sprite2.scale = 0.5;
      var sprite3 = createSprite(210, 230);
      sprite3.setAnimation("pig");
      sprite3.scale = 0.35;
      function draw() {
      sprite1.y=randomNumber(215,150);
      sprite2.y=randomNumber(200,150);
      sprite3.y=randomNumber(230,190);
      drawSprites();
      }

......................................................................................................

lesson_13

   #jet and planeBlue

   var jet = createSprite(350, 350);
   jet.setAnimation("jet");
   var plane = createSprite(50, 200);
   plane.setAnimation("plane");

   function draw() {
   background("skyblue");
   
   jet.y = jet.y - 3;
   plane.x = plane.x + 3;
   drawSprites();
   }

......................................................................................................

   #Diagonal Movement

      var mouse = createSprite(50, 50);
      mouse.setAnimation("mouse");
      mouse.scale = 0.5;

      function draw() {
      background("lightgreen");
      mouse.y = mouse.y + 2;
      mouse.x = mouse.x + 2;
      drawSprites();
      createEdgeSprites();
      mouse.bounceOff(edges);
      }

......................................................................................................

   #Rotation and spinning

      var pan = createSprite(200, 200);
      pan.setAnimation("pan");

      function draw() {
      background("palegreen");
      pan.rotation=pan.rotation + 2;
      drawSprites();
      }

......................................................................................................
   #Fish animation

      var orangeFish = createSprite(400, randomNumber(0, 100));
      orangeFish.setAnimation("orange_fish");
      var blueFish = createSprite(250, randomNumber(100, 200));
      blueFish.setAnimation("blue_fish");
      var greenFish = createSprite(300, randomNumber(200, 300));
      greenFish.setAnimation("green_fish");

      function draw() {
      background("navy");
      orangeFish.x = orangeFish.x - 2;
         blueFish.x = orangeFish.x - 150;
         greenFish.x = orangeFish.x - 10;
      drawSprites();
      }
......................................................................................................
lesson_14

   #Create Your Scene - background
      // Set up the canvas and background
      function setup() {
      createCanvas(400, 400);
      }

      function draw() {
      background("skyblue"); 


      fill("yellow"); 
      ellipse(350, 50, 80, 80); 

      
      fill("green"); 
      rect(0, 300, 400, 100); 

      fill("gray");
      triangle(50, 300, 150, 100, 250, 300); // Mountain 1
      triangle(200, 300, 300, 120, 400, 300); // Mountain 2


      fill("white");
      ellipse(100, 80, 60, 40); // Cloud 1
      ellipse(130, 80, 60, 40);
      ellipse(120, 60, 70, 40);

      ellipse(280, 100, 60, 40); // Cloud 2
      ellipse(310, 100, 60, 40);
      ellipse(300, 80, 70, 40);
      }
......................................................................................................
   lesson_15

      #Booleans
      var finishLine = createSprite(40, 200);
      finishLine.setAnimation("finish_line");

      var raceCar = createSprite(400, 200);
      raceCar.setAnimation("race_car");

      function draw() {
      // Draw Background
      background("white");
      
      // Counter pattern to make car move across the screen
      raceCar.x = raceCar.x - 2;
      
      //Program text
      fill("black");
      strokeWeight(5);
      textSize(25);
      text("The race car has crossed the finish line:", 100, 20, 300, 60);
      fill("blue");
      // Add blocks to display the boolean value
      text(raceCar.x < finishLine.x, 100, 100);
      
      // Draw Animations
      drawSprites();
      }

......................................................................................................
   #Changing Fruit
      var fruit = createSprite(200, 200);
      fruit.setAnimation("apple");
      fruit.scale = 0.1;

      function draw() {
      // Draw Background
      background("white");
      
      // Update Values
      fruit.scale = fruit.scale + 0.01;
      
      // Add a conditional to the draw loop
      if (fruit.scale > 2) {
         fruit.setAnimation("pear"); // Change the fruit to a pear if scale is greater than 2
      }

      // Draw Animations
      drawSprites();
      }

......................................................................................................
   #Boolean Expressions
      var sprite1 = createSprite(200, 200); // sprite1.x is now 200
      sprite1.setAnimation("apple");
      sprite1.rotation = 30;
      sprite1.scale = 1;

      var sprite2 = createSprite(150, 150); // sprite2.x and sprite2.y are now both 150
      sprite2.setAnimation("carrot");
      sprite2.rotation = 30;
      sprite2.scale = 1;

      // Do NOT edit the following (I'm serious!!!)
      drawSprites();
      textSize(20);
      fill("blue");
      text("Comparison 1: " + (sprite2.x == sprite2.y), 0, 15);
      text("Comparison 2: " + (sprite2.rotation < 40), 0, 40);
      text("Comparison 3: " + (sprite1.scale == sprite2.scale), 0, 65);
      text("Comparison 4: " + (sprite1.x > 150), 0, 90);
      text("Comparison 5: " + (sprite2.y < 200), 0, 115);

......................................................................................................
   #Boolean Expressions
      var sprite1 = createSprite(200, 200); 
      sprite1.setAnimation("apple");
      sprite1.rotation = 30; 
      sprite1.scale = 1;

      var sprite2 = createSprite(150, 150); 
      sprite2.setAnimation("carrot");
      sprite2.rotation = 30;
      sprite2.scale = 1;

      // Do NOT edit the following (I'm serious!!!)
      drawSprites();
      textSize(20);
      fill("blue");
      text("Comparison 1: " + (sprite2.x == sprite2.y), 0, 15);
      text("Comparison 2: " + (sprite2.rotation < 40), 0, 40);
      text("Comparison 3: " + (sprite1.scale == sprite2.scale), 0, 65);
      text("Comparison 4: " + (sprite1.x > 150), 0, 90); 
      text("Comparison 5: " + (sprite2.y < 200), 0, 115); 

......................................................................................................
   #Magic Dinosaur
      var backdrop = createSprite(200, 200);
      backdrop.setAnimation("sci_fi");

      var dinosaur = createSprite(200, 350);
      dinosaur.scale = 0.2;
      dinosaur.setAnimation("tyrannosaurus");

      function draw() {
      // Move the dinosaur up
      dinosaur.y = dinosaur.y - 5;

      // Add a conditional to detect when the dinosaur is in the sky
      if (dinosaur.y < 150) {
         dinosaur.setAnimation("pterodactyl"); // Change to pterodactyl when it reaches the sky
      }

      // Draw everything
      drawSprites();
}
......................................................................................................

   #Visible

      var balloon = createSprite(200, 200);
      balloon.setAnimation("balloon");
      balloon.scale = 0.1;

      //Create a pop sprite
      var pop = createSprite(200, 200);
      pop.setAnimation("pop");

      //Set the pop sprite to be hidden at the beginning
      pop.visible = false;

      function draw() {
      // Draw Background
      background("white");

      // Update Values
      balloon.scale = balloon.scale + 0.001;

      //Add a conditional that checks the size of the balloon
      // to see when it touches the edge of the screen
      if (balloon.scale > 1) { // Check if the balloon's scale is large enough (this can be adjusted)
         balloon.visible = false;  // Hide the balloon
         pop.visible = true;  // Show the pop sprite
      }

      // Draw Animations
      drawSprites();
      }

......................................................................................................
lesson_16

   #Run the code and try pressing the "p" and "h" keys.
      var sprite = createSprite(200, 200);
      sprite.setAnimation("giraffe");

      function draw() {
      background("white");

      //Look inside the first two conditional statements to see how the code works.
      if(keyDown("h")) {
         sprite.setAnimation("hippo");
      }

      if(keyDown("p")) {
         sprite.setAnimation("pig");
      }

      if(keyDown("r")) {
      sprite.setAnimation("rabbit")

      }
      drawSprites();
      }
......................................................................................................

   #Moving Sprites
   var bug = createSprite(200, 200);
   bug.setAnimation("ladybug");

   function draw() {
   //Draw Background
   background("white");
   //Add a conditional statement to check if the right arrow key has been pressed down.
   if(keyDown("right")){
      bug.x += 5
   }
   //Draw Animations
   drawSprites();
   }

......................................................................................................

   #Gears with Conditionals
      var blueGear = createSprite(100, 220);
      blueGear.setAnimation("blue_gear");

      var greenGear = createSprite(183, 298);
      greenGear.setAnimation("green_gear");

      var redGear = createSprite(185, 145);
      redGear.setAnimation("red_gear");

      function draw() {
      background("white");

      // Check if the space key is pressed
      if (keyDown("space")) {
         blueGear.rotation = blueGear.rotation - 1;
         greenGear.rotation = greenGear.rotation + 1;
         redGear.rotation = redGear.rotation + 1;
      }

      drawSprites();
      }

......................................................................................................
   #Fish With Arrows
      var orangeFish = createSprite(400, randomNumber(0, 100));
      orangeFish.setAnimation("orange_fish");
      var blueFish = createSprite(250, randomNumber(100, 200));
      blueFish.setAnimation("blue_fish");
      var greenFish = createSprite(300, randomNumber(200, 300));
      greenFish.setAnimation("green_fish");

      function draw() {
      background("navy");
      if(keyDown("left")){
         orangeFish.x = orangeFish.x - 2;
         blueFish.x = orangeFish.x - 150;
         greenFish.x = orangeFish.x - 10;
      }
      
      drawSprites();
      }
......................................................................................................

   #Move in All Directions
      var backdrop = createSprite(200,200);
      backdrop.setAnimation("rainbow");
      var flyer = createSprite(200,200);
      flyer.setAnimation("wing_bot");

      function draw() {

         //Add code to move the sprite left when the left arrow is pressed
         if(keyDown("left")){
            flyer.x -= 5;
         }

         //Add code to move the sprite right when the right arrow is pressed
            if(keyDown("right")){
               flyer.x += 5;
            }

         //Add code to move the sprite up when the up arrow is pressed
         if(keyDown("up")){
            flyer.y -= 5;
         }

         //Add code to move the sprite down when the down arrow is pressed
         if(keyDown("down")){
            flyer.y += 5;
         }

      drawSprites();
      }

......................................................................................................
   #Responding to a Single Click
      var clicks = 0;

      function draw() {
      //Change the code to use the new block, so the program only gives you a point for new clicks.
      if (keyWentDown("space")) {
            clicks = clicks + 1;
      }
      background("white");
      textSize(50);
      text(clicks, 165, 175, 70, 50);
      }
......................................................................................................
   #Changing Images as you Move
   
      //1 Duplicate your chosen bug image four times in the animation tab.
      //2 Edit each of your images to point in one of the four directions.
      var bug = createSprite(200, 200);
      bug.setAnimation("fly");

      function draw() {
      //Draw Background
      background("white");

      //3 Add code to each of your conditionals 
      //to change the animation of the sprite if different arrow keys are pressed.
      if(keyDown("up")){
         bug.y = bug.y - 5;
         bug.rotation =90
      }
      if(keyDown("down")){
         bug.y = bug.y + 5;
         bug.rotation = 270
         

      }
      if(keyDown("left")){
         bug.x = bug.x - 5;
         bug.rotation =0

      }
      if(keyDown("right")){
         bug.x = bug.x + 5;
         bug.rotation = 

      }

      //Draw Animations
      drawSprites();
      }
